<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.lunit.member.IntegrationControllerTest" tests="15" skipped="0" failures="0" errors="0" timestamp="2024-04-30T14:08:24" hostname="DESKTOP-TTJDB1S" time="9.378">
  <properties/>
  <testcase name="회원 가입 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.744"/>
  <testcase name="로그인 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.238"/>
  <testcase name="회원 정보 조회 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.041"/>
  <testcase name="엑세스 토큰 재발급 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.077"/>
  <testcase name="리프레쉬 토큰 재발급 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.047"/>
  <testcase name="로그아웃 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.041"/>
  <testcase name="로그아웃 후 엑세스 토큰 재발급 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.046"/>
  <testcase name="회원 정보 조회 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.025"/>
  <testcase name="영상 분석 실행 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="7.626"/>
  <testcase name="최대 영상 분석수 연장 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.053"/>
  <testcase name="어드민 회원 가입 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.126"/>
  <testcase name="어드민 로그인 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.15"/>
  <testcase name="가입 유저 조회 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.034"/>
  <testcase name="가입 유저 분석 결과 조회 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.035"/>
  <testcase name="회원 탈퇴 테스트" classname="com.example.lunit.member.IntegrationControllerTest" time="0.08"/>
  <system-out><![CDATA[23:08:15.015 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.lunit.member.IntegrationControllerTest]: IntegrationControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
23:08:15.203 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.lunit.LunitApplication for test class com.example.lunit.member.IntegrationControllerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2024-04-30T23:08:15.801+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.e.l.member.IntegrationControllerTest   : Starting IntegrationControllerTest using Java 21.0.2 with PID 22060 (started by kimho in E:\LUNA_git\WebFullStack\lunit)
2024-04-30T23:08:15.803+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.e.l.member.IntegrationControllerTest   : No active profile set, falling back to 1 default profile: "default"
2024-04-30T23:08:16.718+09:00  INFO 22060 --- [lunit-insight] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-30T23:08:16.789+09:00  INFO 22060 --- [lunit-insight] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 52 ms. Found 3 JPA repository interfaces.
2024-04-30T23:08:19.494+09:00  INFO 22060 --- [lunit-insight] [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-30T23:08:19.621+09:00  INFO 22060 --- [lunit-insight] [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-04-30T23:08:19.687+09:00  INFO 22060 --- [lunit-insight] [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-04-30T23:08:19.907+09:00  INFO 22060 --- [lunit-insight] [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-04-30T23:08:19.962+09:00  INFO 22060 --- [lunit-insight] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-04-30T23:08:20.149+09:00  INFO 22060 --- [lunit-insight] [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:~/lunit user=SA
2024-04-30T23:08:20.152+09:00  INFO 22060 --- [lunit-insight] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-04-30T23:08:21.833+09:00  INFO 22060 --- [lunit-insight] [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-04-30T23:08:21.837+09:00  INFO 22060 --- [lunit-insight] [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-30T23:08:23.284+09:00  INFO 22060 --- [lunit-insight] [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@446dc997, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32cfd722, org.springframework.security.web.context.SecurityContextHolderFilter@440d45c5, org.springframework.security.web.header.HeaderWriterFilter@6237927a, com.example.lunit.common.filter.JwtFilter@69815126, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7e3b101b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62284954, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4ff3ca23, org.springframework.security.web.session.SessionManagementFilter@2850fe85, org.springframework.security.web.access.ExceptionTranslationFilter@1b3a1e42, org.springframework.security.web.access.intercept.AuthorizationFilter@25bfc558]
2024-04-30T23:08:23.802+09:00  INFO 22060 --- [lunit-insight] [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:~/lunit'
2024-04-30T23:08:23.976+09:00  INFO 22060 --- [lunit-insight] [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-04-30T23:08:23.977+09:00  INFO 22060 --- [lunit-insight] [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-04-30T23:08:23.980+09:00  INFO 22060 --- [lunit-insight] [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 3 ms
2024-04-30T23:08:24.031+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.e.l.member.IntegrationControllerTest   : Started IntegrationControllerTest in 8.659 seconds (process running for 10.579)
2024-04-30T23:08:24.186+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : invalid jwt token. uri : /signup
Hibernate: 
    select
        m1_0.id 
    from
        member m1_0 
    where
        m1_0.user_name=? 
        and m1_0.is_enabled=? 
        and m1_0.role=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        member
        (created_at, cur_analyze_cnt, email, expire_duration, is_enabled, max_analyze_cnt, password, role, updated_at, user_name, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        token
        (created_at, expires_at, jwt_token, member_id, token_type, updated_at, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
2024-04-30T23:08:24.905+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : Authentication : org.springframework.security.core.userdetails.User [Username=kimho314test, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_CLIENT]]
Hibernate: 
    select
        m1_0.id 
    from
        member m1_0 
    where
        m1_0.user_name=? 
        and m1_0.is_enabled=? 
    fetch
        first ? rows only
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0 
    where
        m1_0.user_name=?
Hibernate: 
    insert 
    into
        token
        (created_at, expires_at, jwt_token, member_id, token_type, updated_at, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        token
        (created_at, expires_at, jwt_token, member_id, token_type, updated_at, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.member_id=? 
        and t1_0.token_type=?
Hibernate: 
    delete 
    from
        token 
    where
        id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
2024-04-30T23:08:25.079+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : Authentication : org.springframework.security.core.userdetails.User [Username=kimho314test, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_CLIENT]]
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0 
    where
        m1_0.user_name=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
2024-04-30T23:08:25.125+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : Authentication : org.springframework.security.core.userdetails.User [Username=kimho314test, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_CLIENT]]
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0 
    where
        m1_0.user_name=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.member_id=? 
        and t1_0.token_type=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
2024-04-30T23:08:25.202+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : Authentication : org.springframework.security.core.userdetails.User [Username=kimho314test, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_CLIENT]]
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0 
    where
        m1_0.user_name=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.member_id=? 
        and t1_0.token_type=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
2024-04-30T23:08:25.249+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : Authentication : org.springframework.security.core.userdetails.User [Username=kimho314test, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_CLIENT]]
Hibernate: 
    select
        m1_0.id 
    from
        member m1_0 
    where
        m1_0.user_name=? 
        and m1_0.is_enabled=? 
    fetch
        first ? rows only
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
Hibernate: 
    update
        token 
    set
        expires_at=?,
        jwt_token=?,
        member_id=?,
        token_type=?,
        updated_at=?,
        version=? 
    where
        id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
2024-04-30T23:08:25.285+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : invalid jwt token. uri : /reissue-token
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0 
    where
        m1_0.user_name=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.member_id=? 
        and t1_0.token_type=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
Hibernate: 
    update
        token 
    set
        expires_at=?,
        jwt_token=?,
        member_id=?,
        token_type=?,
        updated_at=?,
        version=? 
    where
        id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
2024-04-30T23:08:25.334+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : Authentication : org.springframework.security.core.userdetails.User [Username=kimho314test, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_CLIENT]]
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0 
    where
        m1_0.user_name=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
2024-04-30T23:08:25.386+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : Authentication : org.springframework.security.core.userdetails.User [Username=kimho314test, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_CLIENT]]
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0 
    where
        m1_0.user_name=?
2024-04-30T23:08:25.398+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.e.lunit.api.service.AnalysisService    : analyzing...
Hibernate: 
    insert 
    into
        dicom_analyze_result
        (created_at, dicom_file_name, dicom_file_path, frontal_score, member_id, prediction_time, updated_at, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    update
        member 
    set
        cur_analyze_cnt=?,
        email=?,
        expire_duration=?,
        is_enabled=?,
        max_analyze_cnt=?,
        password=?,
        role=?,
        updated_at=?,
        user_name=?,
        version=? 
    where
        id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
2024-04-30T23:08:32.998+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : Authentication : org.springframework.security.core.userdetails.User [Username=kimho314test, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_CLIENT]]
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0 
    where
        m1_0.user_name=?
Hibernate: 
    update
        member 
    set
        cur_analyze_cnt=?,
        email=?,
        expire_duration=?,
        is_enabled=?,
        max_analyze_cnt=?,
        password=?,
        role=?,
        updated_at=?,
        user_name=?,
        version=? 
    where
        id=?
2024-04-30T23:08:33.039+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : invalid jwt token. uri : /signup
Hibernate: 
    select
        m1_0.id 
    from
        member m1_0 
    where
        m1_0.user_name=? 
        and m1_0.is_enabled=? 
        and m1_0.role=? 
    fetch
        first ? rows only
Hibernate: 
    insert 
    into
        member
        (created_at, cur_analyze_cnt, email, expire_duration, is_enabled, max_analyze_cnt, password, role, updated_at, user_name, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        token
        (created_at, expires_at, jwt_token, member_id, token_type, updated_at, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
2024-04-30T23:08:33.171+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : Authentication : org.springframework.security.core.userdetails.User [Username=kimho314admintest, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
Hibernate: 
    select
        m1_0.id 
    from
        member m1_0 
    where
        m1_0.user_name=? 
        and m1_0.is_enabled=? 
    fetch
        first ? rows only
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0 
    where
        m1_0.user_name=?
Hibernate: 
    insert 
    into
        token
        (created_at, expires_at, jwt_token, member_id, token_type, updated_at, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        token
        (created_at, expires_at, jwt_token, member_id, token_type, updated_at, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.member_id=? 
        and t1_0.token_type=?
Hibernate: 
    delete 
    from
        token 
    where
        id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
2024-04-30T23:08:33.323+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : Authentication : org.springframework.security.core.userdetails.User [Username=kimho314admintest, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0 
    where
        m1_0.role=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
2024-04-30T23:08:33.356+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : Authentication : org.springframework.security.core.userdetails.User [Username=kimho314admintest, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0 
    where
        m1_0.user_name=?
Hibernate: 
    select
        dar1_0.id,
        dar1_0.created_at,
        dar1_0.dicom_file_name,
        dar1_0.dicom_file_path,
        dar1_0.frontal_score,
        dar1_0.member_id,
        dar1_0.prediction_time,
        dar1_0.updated_at,
        dar1_0.version 
    from
        dicom_analyze_result dar1_0 
    where
        dar1_0.member_id=? 
    order by
        dar1_0.created_at desc
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.jwt_token=?
2024-04-30T23:08:33.390+09:00  INFO 22060 --- [lunit-insight] [    Test worker] c.example.lunit.common.filter.JwtFilter  : Authentication : org.springframework.security.core.userdetails.User [Username=kimho314test, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_CLIENT]]
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0 
    where
        m1_0.user_name=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0 
    where
        t1_0.member_id=?
Hibernate: 
    update
        member 
    set
        cur_analyze_cnt=?,
        email=?,
        expire_duration=?,
        is_enabled=?,
        max_analyze_cnt=?,
        password=?,
        role=?,
        updated_at=?,
        user_name=?,
        version=? 
    where
        id=?
Hibernate: 
    delete 
    from
        token 
    where
        id=?
Hibernate: 
    delete 
    from
        token 
    where
        id=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0 
    where
        m1_0.user_name=?
Hibernate: 
    select
        dar1_0.id,
        dar1_0.created_at,
        dar1_0.dicom_file_name,
        dar1_0.dicom_file_path,
        dar1_0.frontal_score,
        dar1_0.member_id,
        dar1_0.prediction_time,
        dar1_0.updated_at,
        dar1_0.version 
    from
        dicom_analyze_result dar1_0
Hibernate: 
    delete 
    from
        dicom_analyze_result 
    where
        id=?
Hibernate: 
    select
        t1_0.id,
        t1_0.created_at,
        t1_0.expires_at,
        t1_0.jwt_token,
        t1_0.member_id,
        t1_0.token_type,
        t1_0.updated_at,
        t1_0.version 
    from
        token t1_0
Hibernate: 
    delete 
    from
        token 
    where
        id=?
Hibernate: 
    delete 
    from
        token 
    where
        id=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.cur_analyze_cnt,
        m1_0.email,
        m1_0.expire_duration,
        m1_0.is_enabled,
        m1_0.max_analyze_cnt,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        m1_0.user_name,
        m1_0.version 
    from
        member m1_0
Hibernate: 
    delete 
    from
        member 
    where
        id=?
Hibernate: 
    delete 
    from
        member 
    where
        id=?
]]></system-out>
  <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (C:\Users\kimho\.gradle\caches\modules-2\files-2.1\net.bytebuddy\byte-buddy-agent\1.14.13\979ce25f7d3096a2e82214ba7dc972a05ce7a171\byte-buddy-agent-1.14.13.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
</testsuite>
